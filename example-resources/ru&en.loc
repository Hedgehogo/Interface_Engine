-ru
  plug "вилка"
-en
  plug "plug"

spoon
  -ru "ложка"
  -en "spoon"

Install
  -en "1. Чтобы не подключать каждый класс отдельно советуем использовать `#include <UI.h>`.
2. Для создания окна с программой используйте:
3. Для создания интерфейса необходимо создать объект класса ui::Interface и первым аргументом с помощью различных объектов описать желаемый интерфейс (в данном случае зеленую капсулу), вторым передаётся массив `ui::IInteraction` описывающих взаимодействия объектов между друг другом.
4. Для корректной работы интерфейса необходимо вызвать `interface.init(window);`, передав туда окно. Если забыть об этом пункте, то вы получите либо чёрный экран, либо SIGSEGV (Segmentation fault).
5. Так же как и стандартном проекте **SFML** вам необходим цикл, итерация которого соответствует одному кадру.
6. Первом делом вам нужно создать объекты `sf::Event event{};`.
7. Далее как и советует **SFML**, создаётся цикл перебирающий и анализирующий все ивенты принадлежащие **SFML** такие, как:
   * закрытие окна `sf::Event::Closed`.
   * изменение размера окна `sf::Event::Resized`.
     1. Для начала необходимо запросить расчёт минимального размера у интерфейса `interface.getMinSize();` и получить текущий размер окна.
     2. Если текущий размер окна нарушает минимальный нужно найти максимум между ними `ui::max(windowSize, minSize);` и изменить размер окна `window.setSize(static_cast<sf::Vector2u>(windowSize));`.
     3. После чего изменить размер камеры под размер окна и присвоить изменённую камеру окну.
     4. В конце нужно изменить размер интерфейса `interface.setSize(windowSize);`.
   * прокручивание колёсика мыши `sf::Event::MouseWheelMoved`.
8. Как обычно, вам нужно очистить экран с предыдущего кадра `window.clear();`.
9. Далее вам нужно обновить интерфейс `interface.update(static_cast<sf::Vector2f>(sf::Mouse::getPosition(window)), window.getSystemHandle());`, передав ему позицию мыши (относительно окна) и активность окна, и отрисовать его `interface.draw();`.
10. В конце кадра вам нужно отобразить результат рендера `window.display();`."